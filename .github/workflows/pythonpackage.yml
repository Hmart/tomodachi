name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/.poetry" python - --yes
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          poetry install --no-interaction -E uvloop -E protobuf -E aiodns
          poetry show --tree
      - name: Test poetry build step
        run: poetry build
      - name: Run unit tests
        run: pytest --cov=./ tests -v
        env:
          TOMODACHI_TEST_AWS_ACCESS_KEY_ID: ${{ secrets.TOMODACHI_TEST_AWS_ACCESS_KEY_ID }}
          TOMODACHI_TEST_AWS_ACCESS_SECRET: ${{ secrets.TOMODACHI_TEST_AWS_ACCESS_SECRET }}
          TOMODACHI_TEST_AWS_REGION: ${{ secrets.TOMODACHI_TEST_AWS_REGION }}
          TOMODACHI_TEST_SERVICE_UUID: ${{ secrets.TOMODACHI_TEST_SERVICE_UUID }}
          TOMODACHI_TEST_SNS_TOPIC_PREFIX: ${{ secrets.TOMODACHI_TEST_SNS_TOPIC_PREFIX }}
          TOMODACHI_TEST_SQS_QUEUE_PREFIX: ${{ secrets.TOMODACHI_TEST_SQS_QUEUE_PREFIX }}
          TOMODACHI_TEST_SNS_KMS_MASTER_KEY_ID: ${{ secrets.TOMODACHI_TEST_SNS_KMS_MASTER_KEY_ID }}
          TOMODACHI_TEST_SQS_KMS_MASTER_KEY_ID: ${{ secrets.TOMODACHI_TEST_SQS_KMS_MASTER_KEY_ID }}
      - name: Lint with flake8
        run: flake8
      - name: Run dummy service
        run: tomodachi run tests/run_example_service.py
      - name: Run dummy service (with uvloop)
        run: tomodachi run --loop uvloop tests/run_example_service.py
      - name: Output version
        run: tomodachi -v
      - name: tomodachi --dependency-versions
        run: tomodachi --dependency-versions
      - name: Type check with mypy
        run: mypy
      - name: Codecov
        run: codecov --token=${{ secrets.CODECOV_TOKEN }}
